
package es.udc.ws.events.client.service.soap.wsdl;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-b01-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "EventsProvider", targetNamespace = "http://soap.ws.udc.es/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EventsProvider {


    /**
     * 
     * @param eventId
     * @return
     *     returns es.udc.ws.events.client.service.soap.wsdl.EventDto
     * @throws SoapInstanceNotFoundException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findEvent", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.events.client.service.soap.wsdl.FindEvent")
    @ResponseWrapper(localName = "findEventResponse", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.events.client.service.soap.wsdl.FindEventResponse")
    public EventDto findEvent(
        @WebParam(name = "eventId", targetNamespace = "")
        Long eventId)
        throws SoapInstanceNotFoundException
    ;

    /**
     * 
     * @param eventDto
     * @return
     *     returns java.lang.Long
     * @throws SoapInputValidationException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addEvent", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.events.client.service.soap.wsdl.AddEvent")
    @ResponseWrapper(localName = "addEventResponse", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.events.client.service.soap.wsdl.AddEventResponse")
    public Long addEvent(
        @WebParam(name = "eventDto", targetNamespace = "")
        EventDto eventDto)
        throws SoapInputValidationException
    ;

}
